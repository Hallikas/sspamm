###
### Configuration file for Semi's Spam Milter
###
### When filter starts configuration file (sspamm.conf) would be searched
### from paths in this order: Current directory, /etc/sspamm and /etc
###
[main]
# Name of our filter, must be same as defined in sendmail
name:		sspamm4

# If child threads is used. Configuration is checked and reloaded in real
# time. Negative effect with threads is that you can't use signals and not
# even CTRL-C to quit. Even then, you SHOULD use childs.
childs:		True

# In /etc/mail/sendmail.mc you should define same port, here is also
# information about flags used in 'INPUT_MAIL_FILTER' macro:
#
# /********************* This stuff goes to sendmail.mc ********************
#dnl # F=
#dnl # (If a filter is unavailable or unresponsive and no 'F'lags have been
#dnl #  specified, the MTA will continue normal handling of the current
#dnl #  connection. The MTA will try to contact the filter again on each
#dnl #  new connection.)
#dnl # T - TempFail
#dnl # R - Reject
#dnl # T=
#dnl # C - Connection
#dnl # S - Sending Data
#dnl # R - Reading Data
#dnl # E - Overall timeout between sending end-of-message to filter and waiting for the final acknowledgment.
#
#define(`MILTER', 1)
#define(`confMILTER_MACROS_CONNECT',`t, b, j, _, {daemon_name}, {if_name}, {if_addr}')dnl
#define(`confMILTER_MACROS_HELO',`s, {tls_version}, {cipher}, {cipher_bits}, {cert_subject}, {cert_issuer}')dnl
#define(`confMILTER_MACROS_ENVFROM',`i, {auth_type}, {auth_authen}, {auth_ssf}, {auth_author}, {mail_mailer}, {mail_host}, {mail_addr}')dnl
#define(`confMILTER_MACROS_ENVRCPT',`{rcpt_mailer}, {rcpt_host}, {rcpt_addr}')dnl
#
#INPUT_MAIL_FILTER(`sspamm4', `S=inet:7999@localhost, F=T, T=C:10m;E:10m;R:10m;S:5m')dnl
# ********************* This stuff goes to sendmail.mc ********************/

# Define port/socket that filter would listen.
port:		inet:7999

###
### Files and Paths
###
### It is possible to use 'macros' on next values: pid, savedir, logfile, rrdfile and crcfile
### %h - hostname (short)
### %c - path of configuration file used
### %s - value in sspammdir variable
### %n - value in name variable
#
# If sspamdir path is not defined, files would be used/saved/created in same
# that that configuration file is in.
sspammdir:	/var/sspamm
tmpdir:		/dev/shm

# If pid file is removed while sspamm is running in daemon mode (as it
# should), sspamm will quite nicely. This is CORRECT way to quit from
# sspamm. Milters does not like signals.
pid:		/var/run/%n.pid

# Note! If logfile is renamed, sspamm will close and open new logfile with
# original name. This allows logrotate.
logfile:	/var/log/sspamm.log

rrdfile:	%c/%n-%h.rrd
crcfile:	%c/%n.crc

# Path to create mail 'var' files (for debug purpouses)
savedir:	%c

# Save unsure and HAM messages only. Usefull for training purpouses.
nonspamonly:	False

# Verbose is numerical value. Verbose levels are:
#	0 - No output at all
#	1 - warning conditions, error, critical
#	2 - Informational (for quick debug) or normal but significant condition
#	3 - debug-level messages
#	4 - full debug, without is_listed flood
#	5 - full debug, with is_listed tests
#	6 - quickview of filtering, without debug
#	7 - log output
#
verbose:	1
# Verbose mode for offline testing
offline:	3

###
### On/Off parameters can be used with values: False, No, 0 or True, Yes, 1
###

# Save information about time spend in different steps while filtering
# Times are shown on saved .var file, or on debug log with higher verbose
# level.
timeme:		Yes

##
## Keep checksum database of passed message body. Also makes crc test possible.
##
crcsave:	True
crchours:	24

# If WatchMode is True, all mails are passed without modifying anything, only
# logging would take place
#
#
# ***** NOTICE, YOU SHOULD DISABLE THIS AFTER YOU HAVE CONFIGURED FILTER *****
#
watchmode:	Yes

##############################################################################
[filter]
#
# We define default tests here. Possible values are:
# connect	Our white-/blacklisting
# helo		Imitates to be us
# ipfromto	Sender/Recipient matching
# rbl		Blacklisting
# dyndns	Dynamic DNS-name
# bayesian	Bayesian SPAM/HAM probability
# wordscan	Scan message body for strings
#
#defaulttests: connect, helo, accept, crc, block, samefromto, ipfromto, headers, wordscan, dyndns, charset, bayesian, rbl
defaulttests: connect, helo, crc, headers, wordscan, dyndns, charset, bayesian, rbl

domains:
### TODO: Samples how these matches
#
# We only filter for these domains. It is possible to define different rules for domains.
# You can define scans to use with domain match (below, only those 3 tests are done):
# 	foobar.com, ourdomain.org:	connect, helo
# ... append 'non default' test for domain:
#	tests: connect, helo, ipfromto
#	domains:
#		ourdomain.org:	+rbl
#		.*
# Or opt-out scans from default tests:
#	other.com:			!bayesian
#
# Domains can be defined here in (real) regexp. Note, first match breaks.
#		foobar.net,somedomain1.(net|fi|se|as|ch|be|gr): ipfromto|test|foo	bar, bayesian, wordscan
#		test.com
#		(guest1|guest2|guest3).com
#		(fi.|se.)?(customer|alias).com: !charset
#		foobar.net|foo.net|foo.com|thisisfoo.org
#		domain2.(com|net|fi|se|dk): accept, samefromto, connect, helo, block, ipfromto, dyndns, headers, wordscan, bayesian, rbl, charset
#		ourdomain.org, someother.net, anyone.com
#		blocked.com: block
# All these three are same:
#		sample1.org: all,-helo
#		sample1.net: -helo
#		sample1.com: !helo
# Also these two:
#		sample2.org: +charset
#		sample2.org: all,+charset
#
#		domainx.org: -charset, -dyndns
#
# Note: .* below matches ALL ADDRESS
		hallikas.*: all, -charset
#		customer1.com: all, helo, accept
#		customer2.com|customer2.net: FOOBAR, all
#		customer3.*: +FOOBAR,all
#		sspamm.com: -rbl, -charset, -bayesian, -crc
#		nobody.net: +FOO, all, +BAR, -charset
#		anywhere.com
		.*

rules:
### TODO: Samples how these matches
#
# It is possible to define few special things on domains. These are made in
# filter/rules section. Rules section does not affect what domains are
# filtered.
#		(sspamm|spam)(-)?(filter)?.(com|net): flagall
### ALWAYS filter this domain, even in watch mode!
#		(name1|name2|name3).com: flagall
#		customer1.fi: watch: foobar
#		customer2.fi
#		customer3.fi:
#		customer4.(fi|com): flagall, watch
#		sspamm.com, gamehost.fi: flagall
		hallikas.com: !watch

[actions]
# It could be good idea to use action comment "(?#flag)" as prefix of regexp
# rule. But this is for backup if comment is not there. More about actions
# on 'rules' section.
accept:		Accept
block:		Delete
connect:	Delete
helo:		Delete
samefromto:	Delete
ipfromto:	Flag
dyndns:		Flag
rbl:		Delete
charset:	Flag
headers:	Flag
wordscan:	Flag
bayesian:	Flag
crc:		Delete

[settings]
maxbodysize:	1024
ipservers:
		(?#delete)dnsbl-1.uceprotect.net
		(?#reject)dnsbl-2.uceprotect.net
		(?#flag)dnsbl-3.uceprotect.net
# Sometimes these have false positives
#		(?#flag)bl.spamcop.net
#		(?#reject)sbl.spamhaus.org
#		(?#reject)psbl.surriel.com
#		(?#reject)cbl.abuseat.org
#		(?#reject)xbl.spamhaus.org
#		(?#reject)b.barracudacentral.org


[rules]
### NOTE! comments in rules!
### You can use multiple regexp comments on one line, but if you START
### regexp line with comment, it is used as 'action' what LINE (not single
### rule) should do!
### So look carefully on next examples:
#
# Folowing actions are available:
# (?#delete)	- Delete message without notifying of recipient/sender
# (?#reject)	- Reject, Don't deliver. Generates NDR. Not recommented!
# (?#flag)	- Flag message as {SPAM}:, continue testing
# (?#flag+)	- Flag message as {SPAM}: and ACCEPT it for delivery
# (?#accept)	- Accept message for delivery
#
# On accept section:
# (?#skip)	- If 'skip' in 'accept', skip 'block' testing.
# (?#break)	- Break current testing ruleset, continue testing
#
# On DynDNS section:
# (?#authmx)	- allow dyndns after this, but do RBL test
# (?#skip)	- allow dyndns addresses and skip RBL for this match
# (?#ignore)	- don't allow dyndns relay, but don't do RBL test for this host 
# (?#break)	- allow dyndns, break rbl tests
#
#
# Note. Example of skip, break combination in accept/block:
# =========================================================
# ----- CUT -----
# accept:
## If sender AND/OR recipient is abuse@ flag and accept it.
#		(?#flag+):abuse@
#		(?#skip):(hostmaster|postmaster|webmaster|website|sspamm|[A-Za-z]+\.[A-Za-z]+)@sspamm.com$
#		(?#break)@sspamm.com$
#block:
#		(?#delete)@sspamm.com$
# ----- CUT -----
#
# Ruleset above block EVERYTHING except addresses defined in accept-skip
# rule. Skip is not same as accept, because after skip all other rules are
# tested.
#
#
# More Notes/Samples!
# ===================
# If first does not match, but second does. Mail WOULD BE REJECTED!
#		(?#reject)smtp-gw\d.sspamm.com|(?#accept)^smtp
# This is correct way to write above
#		(?#reject)smtp-gw\d.sspamm.com
#		(?#accept)^smtp
# 
# This is bit dangerous, because system parses first comment as action:
#		(?#smilehouse.com)193.94.205.129|(?#datacapture.co.uk)adsl-217.146.111.67.merula.net|(?#mail.nordvalls.se)85.30.130.17
# If must start with comment, but without action, this is beter way to write it:
#		(?#)(?#smilehouse.com)193.94.205.129|(?#datacapture.co.uk)adsl-217.146.111.67.merula.net|(?#mail.nordvalls.se)85.30.130.17
# This is valid line. All matches on this line, is detected as authmx host.
#		(?#authmx)(?#smilehouse.com)193.94.205.129|(?#datacapture.co.uk)adsl-217.146.111.67.merula.net|(?#mail.nordvalls.se)85.30.130.17


##############################################################################################################################
###
###
###
##############################################################################################################################
## Hide rules make possible to hide hosts from received/ipfromto tests. You
## should add hosts here, that relays email to your system often. gmail and
## iki.fi for example. Technical detail, received lines are processed
## recursively, lines matched to hide rules are ignored when creating
## received table, so those lines are not matched to any rules!
hide:
#		^(192\.168\.\d{1,3}\.\d{1,3}|10\.\d{1,3}\.\d{1,3}\.\d{1,3})

##############################################################################################################################
###
###
###
##############################################################################################################################
### Connect - Personal 'firewall'
## Matches is tested against IP and DNS. (Not recursive. Should it be?)
connect:
# 127.0.0.1 test is also hardcoded, here is sample how to do it:
		(?#accept)^127\.0\.0\.1$
# If reverse DNS returns localhost, delete message. PTR should NEVER point
# to localhost. (except on 127. block)
		(?#delete)^localhost$
# Local, internal, network are accepted
#		(?#ignore)^(10\.\d{1,3}\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3})$

##############################################################################################################################
###
###
###
##############################################################################################################################
helo:
		(?#reject)^aol.com$

##############################################################################################################################
###
###
###
##############################################################################################################################
### accept/block/ipfromto - test [ip/dns]:[from]:[to] combinations for match.
##
## Accept and Block are TESTED WITH ALL [ip/dns]:[from]:[to] combinations,
## These two MUST keep as light as possible. Mostly these are used for quick
## block of recipients. Note these usually should have recipient to match.
##
## NOTE! Most rules (sender based) should be in ipfromto because that is
## tested for only first recipient.
##
accept:
# If sender AND/OR recipient is abuse@ flag it.
		(?#flag+):abuse@

# If using 'allowed' recipient list. Add allowed recipients here, like this:
#		(?#skip):(hostmaster|postmaster|webmaster|website|hosting)@hallikas.com$
#		(?#skip):([A-Za-z]+\.[A-Za-z]+|[a-z]+)@hallikas.com$
#		(?#break)@hallikas.com$

##############################################################################################################################
###
###
###
##############################################################################################################################
block:
# Continued from accept part. All allowed recipients are matched in 'accept'
# section with 'skip' action. Now it is safe to delete others.
#		(?#delete)@hallikas.com$

# This should/could be in ipfromto, but we must make as quick match as possible.
# Matches as sender AND recipient
		(?#delete)firstname.(last|sure)name(\w)?@|etunimi.sukunimi(\w)?@

# SpamTrap. Matches as recipient, note end of line mark ($).
#		(?#delete)roskaposti@hallikas.com$

##############################################################################################################################
###
###
###
##############################################################################################################################
ipfromto:
# NOTE! I should use \. instead of plain . ... Mainly because . matches
# EVERYTHING, but \. matches only dot. But I'm lazy and I like to write
# readable rules. So it is VERY VERY likely that .osuuspankki.fi would match
# with . same way as with \.
#
# 100% Spam
		(?#delete):mailer-daemon@none:

##############################################################################################################################
###
### dyndns - Dynamic names (automatically generated for Home computers) and RBL
###
##############################################################################################################################
dyndns:
###
### authmx - define mail relay hosts, that can/would accept 'dyndns'. Don't do dyndns check after match.
###
#
# skip - allow dyndns addresses and skip RBL for this match
# authmx - allow dyndns after this, but do RBL test
# ignore - don't allow dyndns relay, but don't do RBL test for this host
# break - break dyndns and rbl tests on match, and continue
#
# You can use NAME
#	client194-14-197-6.exicom.se
#	(?#authmx)ded-rb.dedicated.tdcsong.se.222.42.195.in-addr.arpa
#	(?#delete)\d{1,3}[\.-]\d{1,3}[\.-]\d{1,3}[\.-]\d{1,3}[\.-].+\.(ru|ro|ua|ar|cn|jp|tw|it|br|mx|in)$
#	(?#flag)\d{1,3}[\.-]\d{1,3}[\.-]\d{1,3}[\.-]\d{1,3}[\.-].+\.(com|net|org)$
# IP
#	213.150.148.53
#	217.212.20.191|213.50.2.(2|109)
# Or even regexps with comments.
#	(?#authmx)(?#hemtex.se)83.241.254.6[67]
#

##############################################################################################################################
###
### CHARSET
###
##############################################################################################################################
charset:

##############################################################################################################################
###
### HEADERS
###
##############################################################################################################################
# Note! This is does not include headers that has duplicate keys, like Received.
headers:

##############################################################################################################################
###
### SUBJECT
###
##############################################################################################################################
subject:

##############################################################################################################################
###
### WORDSCAN / HTML
###
##############################################################################################################################
blockhtml:

##############################################################################################################################
###
### WORDSCAN / HTML, Links
###
##############################################################################################################################
links:

##############################################################################################################################
###
### WORDSCAN
###
##############################################################################################################################
blockwords:
